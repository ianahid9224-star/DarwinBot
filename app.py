import os
import requests
import telebot

# –¢–æ–∫–µ–Ω—ã –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (Render -> Environment Variables)
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
HF_TOKEN = os.getenv("HF_TOKEN")

bot = telebot.TeleBot(TELEGRAM_TOKEN)

# Hugging Face endpoint (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –¥—Ä—É–≥—É—é –º–æ–¥–µ–ª—å, –Ω–∞–ø—Ä–∏–º–µ—Ä gpt2, mistralai/Mistral-7B-Instruct-v0.2 –∏ –¥—Ä.)
API_URL = "https://api-inference.huggingface.co/models/gpt2"
headers = {"Authorization": f"Bearer {HF_TOKEN}"}

def ask_huggingface(text):
    payload = {"inputs": text}
    response = requests.post(API_URL, headers=headers, json=payload)
    try:
        data = response.json()
        if isinstance(data, list) and "generated_text" in data[0]:
            return data[0]["generated_text"]
        elif isinstance(data, dict) and "error" in data:
            return "‚ö†Ô∏è –û—à–∏–±–∫–∞ –º–æ–¥–µ–ª–∏: " + data["error"]
        else:
            return "ü§ñ –ù–µ –ø–æ–Ω—è–ª –æ—Ç–≤–µ—Ç–∞ –æ—Ç –º–æ–¥–µ–ª–∏."
    except Exception as e:
        return "‚ö†Ô∏è –û—à–∏–±–∫–∞: " + str(e)

@bot.message_handler(commands=["start"])
def start(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç üëã –Ø —Ç–≤–æ–π –ò–ò-–±–æ—Ç! –ù–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å.")

@bot.message_handler(func=lambda message: True)
def reply(message):
    user_input = message.text
    bot.send_chat_action(message.chat.id, "typing")
    answer = ask_huggingface(user_input)
    bot.send_message(message.chat.id, answer)

print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
bot.infinity_polling()
